generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                @id @default(cuid())
  email                 String                @unique
  username              String                @unique
  password              String
  role                  UserRole              @default(USER)
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
  switches              Switch[]
  shareableId           String                @unique @default(cuid())
  emailVerified         DateTime?
  verificationTokens    VerificationToken[]
  passwordResetTokens   PasswordResetToken[]
  forceCurvePreferences ForceCurvePreference[]
  showForceCurves       Boolean               @default(true)
}

model Switch {
  id              String    @id @default(cuid())
  name            String
  type            SwitchType
  springWeight    String?
  springLength    String?
  actuationForce  Float?
  bottomOutForce  Float?
  preTravel       Float?
  bottomOut       Float?
  manufacturer    String?
  notes           String?
  imageUrl        String?
  topHousing      String?
  bottomHousing   String?
  stem            String?
  dateObtained    DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(cuid())
  token      String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model PasswordResetToken {
  id         String   @id @default(cuid())
  token      String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt  DateTime
  createdAt  DateTime @default(now())
}

model ForceCurvePreference {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  switchName       String
  manufacturer     String?
  selectedFolder   String
  selectedUrl      String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  
  @@unique([userId, switchName, manufacturer])
}

enum UserRole {
  USER
  ADMIN
}

enum SwitchType {
  LINEAR
  TACTILE
  CLICKY
  SILENT_LINEAR
  SILENT_TACTILE
}